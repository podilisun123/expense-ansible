- name: configure application server
  hosts: app
  become: yes
  vars:
    db_host: 172.31.85.36
    db_password: ExpenseApp@1
  tasks:
  - name: default nodejs mdoule disabled
    ansible.builtin.command: dnf module disable nodejs -y

  - name: enable nodejs mdoule 
    ansible.builtin.command: dnf module enable nodejs:20 -y
  
  - name: install nodejs
    ansible.builtin.dnf:
      name: nodejs
      state: latest
  
  - name: create expense user
    ansible.builtin.user:
      name: expense
      state: present
    
  - name: create app directory
    ansible.builtin.file:
      path: /app
      state: directory
  
  - name: download backend code
    ansible.builtin.get_url:
      url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
      dest: /tmp/backend.zip

  - name: unzip the backend code
    ansible.builtin.unarchive:
      src: /tmp/backend.zip
      dest: /app
      remote_src: yes

  - name: download dependecies
    ansible.builtin.command: npm install
    args:
      chdir: /app

  - name: copy backend service module
    ansible.builtin.copy:
      src: backend.service
      dest: /app
     # remote_src: yes
  - name: install mysql server
    ansible.builtin.dnf:
      name: mysql
      state: installed

  - name: install python mysql dependencies
    ansible.builtin.pip:
      name:
      - PyMySQL
      - cryptography
      executable: pip3.9

  - name: connect mysql server
    community.mysql.mysql_db:
      login_user: root
      login_password: "{{ db_password }}"
      login_host: "{{ db_host }}"
      target: /app/schema/backend.sql
      state: import
      name: all

  - name: daemon reload
    ansible.builtin.systemd_service:
      daemon_reload: true
      

  - name: start the backend service
    ansible.builtin.service:
      name: backend
      state: restarted
      enabled: yes
