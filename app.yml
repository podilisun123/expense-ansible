- name: configure nodejs backend application
  hosts: app
  become: yes
  vars:
    db_password: ExpenseApp@1
    mysql_host: 172.31.46.229
  tasks:
  - name: disable default module in node js
    ansible.builtin.command: dnf module disable nodejs -y 

  - name: enable latest module in node js
    ansible.builtin.command: dnf module enable  nodejs:20 -y 

  - name: install node js
    ansible.builtin.dnf:
      name: "{{ item }}"
      state: installed
    loop:
    - nodejs
    - mysql
  
  - name: create expense user
    ansible.builtin.user:
      name: expense
      state: present
  
  - name: crate app directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: download and unzip the backend code
    ansible.builtin.unarchive:
      src: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
      dest: /tmp/backend.zip
      remote_src: yes

  - name: install backend dependencies
    ansible.builtin.command: npm install
    args:
    chdir: /app

  - name: copy backend service
    ansible.builtin.copy:
    src: backend.service
    dest: /etc/systemd/system/backend.service

  - name: install python mysql dependecies
    ansible.builtin.pip:
      name:
      -  PyMySQL
      - cryptography
      executable: pip3.9

  - name: import schema into mysql 
    community.mysql.mysql_db:
    login_user: root
    login_password: "{{ db_password }}"
    login_host: "{{ mysql_host }}"
    name: all
    state: import

  - name: system daemon reload
    ansible.builtin.systemd_service:
      daemon_reload: true

  - name: start and enabled backend
    ansible.builtin.service:
      name: backend
      state: started
      enabled: yes